"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dbSymbols = {
    dbByFieldName: Symbol('sakuraApiDbByFieldName'),
    dbByPropertyName: Symbol('sakuraApiDbByPropertyName'),
    hasNewChildOption: Symbol('sakuraApiHasNewChildOption'),
    propertyName: Symbol('sakuraApiDbOptionsPropertyName')
};
function Db(dbOptions) {
    const options = (typeof dbOptions === 'string')
        ? { field: dbOptions }
        : (!dbOptions) ? {} : dbOptions;
    return (target, key) => {
        options[exports.dbSymbols.propertyName] = key;
        const mapByPropertyName = getMetaDataMap(target, exports.dbSymbols.dbByPropertyName);
        const mapByFieldName = getMetaDataMap(target, exports.dbSymbols.dbByFieldName);
        mapByPropertyName.set(key, options);
        mapByFieldName.set(options.field || key, options);
    };
    function getMetaDataMap(target, symbol) {
        let map = Reflect.getMetadata(symbol, target);
        if (!map) {
            map = new Map();
            Reflect.defineMetadata(symbol, map, target);
            target.constructor[symbol] = map;
        }
        return map;
    }
}
exports.Db = Db;
//# sourceMappingURL=db.js.map