/// <reference types="express" />
import { Handler } from 'express';
import 'reflect-metadata';
import { IAuthenticatorConstructor } from '../plugins';
export declare type HttpMethod = 'get' | 'getAll' | 'put' | 'post' | 'delete';
export interface IRoutableLocals {
    reqBody: any;
    data: any;
    status: any;
    send(status: any, data?: any): IRoutableLocals;
}
export interface IRoutableOptions {
    authenticator?: IAuthenticatorConstructor[] | IAuthenticatorConstructor;
    blackList?: string[];
    baseUrl?: string;
    exposeApi?: HttpMethod[];
    suppressApi?: HttpMethod[] | boolean;
    model?: any;
    beforeAll?: Handler[] | Handler;
    afterAll?: Handler[] | Handler;
}
export interface ISakuraApiClassRoute {
    authenticators: IAuthenticatorConstructor[];
    path: string;
    f: Handler;
    httpMethod: string;
    method: string;
    beforeAll: Handler[] | Handler;
    afterAll: Handler[] | Handler;
    before?: Handler[] | Handler;
    after?: Handler[] | Handler;
    name: string;
    routable: any;
}
export declare const routableSymbols: {
    authenticators: symbol;
    changeSapi: symbol;
    isSakuraApiRoutable: symbol;
    model: symbol;
    routes: symbol;
    sapi: symbol;
};
export declare function Routable(options?: IRoutableOptions): any;
