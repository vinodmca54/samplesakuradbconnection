"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongodb_1 = require("mongodb");
class SanitizeMongoDB {
    static removeAll$Keys(input) {
        return SanitizeMongoDB.sanitizeObject(input, (key) => {
            return /^\$/.test(key);
        });
    }
    static remove$where(input) {
        return SanitizeMongoDB.sanitizeObject(input, (key) => {
            return key === '$where';
        });
    }
    static sanitizeObject(input, filter) {
        if (input === null || input === undefined) {
            return input;
        }
        const obj = (typeof input === 'string')
            ? JSON.parse(input)
            : input;
        sanitize(obj);
        return obj;
        function sanitize(targetObj) {
            for (const key in targetObj) {
                const field = targetObj[key];
                if (filter(key)) {
                    delete targetObj[key];
                }
                else if (typeof field === 'object') {
                    sanitize(field);
                }
            }
        }
    }
    static whiteList$Keys(input, whiteList) {
        whiteList = whiteList || [];
        return SanitizeMongoDB.sanitizeObject(input, (key) => {
            return /^\$/.test(key) && whiteList.indexOf(key) === -1;
        });
    }
    static flattenObj(input) {
        if (typeof input !== 'object' || input === null) {
            return input;
        }
        const target = {};
        transform.call(target, input);
        return target;
        function transform(source, parentKey) {
            for (const key of Object.getOwnPropertyNames(source)) {
                const isObjectID = source[key] instanceof mongodb_1.ObjectID || (source[key].constructor || {}).name === 'ObjectID';
                const fieldName = ((parentKey) ? [parentKey, key] : [key]).join('.');
                if (typeof source[key] === 'object' && !isObjectID && source[key] !== null) {
                    transform.call(this, source[key], fieldName);
                }
                else {
                    this[fieldName] = source[key];
                }
            }
        }
    }
}
exports.SanitizeMongoDB = SanitizeMongoDB;
//# sourceMappingURL=mongo-db.js.map